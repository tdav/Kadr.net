//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kadr.PVOnlineWorks.srUni {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OutResponce", Namespace="http://schemas.datacontract.org/2004/07/Asbt.Services")]
    [System.SerializableAttribute()]
    public partial class OutResponce : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int pIdField;
        
        private byte[] pFileField;
        
        private string pPathField;
        
        private string pDivtypeField;
        
        private string pFileNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int pId {
            get {
                return this.pIdField;
            }
            set {
                if ((this.pIdField.Equals(value) != true)) {
                    this.pIdField = value;
                    this.RaisePropertyChanged("pId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public byte[] pFile {
            get {
                return this.pFileField;
            }
            set {
                if ((object.ReferenceEquals(this.pFileField, value) != true)) {
                    this.pFileField = value;
                    this.RaisePropertyChanged("pFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public string pPath {
            get {
                return this.pPathField;
            }
            set {
                if ((object.ReferenceEquals(this.pPathField, value) != true)) {
                    this.pPathField = value;
                    this.RaisePropertyChanged("pPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public string pDivtype {
            get {
                return this.pDivtypeField;
            }
            set {
                if ((object.ReferenceEquals(this.pDivtypeField, value) != true)) {
                    this.pDivtypeField = value;
                    this.RaisePropertyChanged("pDivtype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public string pFileName {
            get {
                return this.pFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.pFileNameField, value) != true)) {
                    this.pFileNameField = value;
                    this.RaisePropertyChanged("pFileName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="srUni.IwcService")]
    public interface IwcService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IwcService/CheckLogin", ReplyAction="http://tempuri.org/IwcService/CheckLoginResponse")]
        byte[] CheckLogin(string p_Value, string p_SignedValue, byte[] p_Cert, string p_Divtype);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcService/CheckLogin", ReplyAction="http://tempuri.org/IwcService/CheckLoginResponse")]
        System.IAsyncResult BeginCheckLogin(string p_Value, string p_SignedValue, byte[] p_Cert, string p_Divtype, System.AsyncCallback callback, object asyncState);
        
        byte[] EndCheckLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IwcService/GetDataTableProcedure", ReplyAction="http://tempuri.org/IwcService/GetDataTableProcedureResponse")]
        byte[] GetDataTableProcedure(string[] p_inParams, string p_ProcName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcService/GetDataTableProcedure", ReplyAction="http://tempuri.org/IwcService/GetDataTableProcedureResponse")]
        System.IAsyncResult BeginGetDataTableProcedure(string[] p_inParams, string p_ProcName, System.AsyncCallback callback, object asyncState);
        
        byte[] EndGetDataTableProcedure(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IwcService/GetDataTableWithPages", ReplyAction="http://tempuri.org/IwcService/GetDataTableWithPagesResponse")]
        byte[] GetDataTableWithPages(string[] p_inParams, string p_ProcName, int FromRec, int ToRec);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcService/GetDataTableWithPages", ReplyAction="http://tempuri.org/IwcService/GetDataTableWithPagesResponse")]
        System.IAsyncResult BeginGetDataTableWithPages(string[] p_inParams, string p_ProcName, int FromRec, int ToRec, System.AsyncCallback callback, object asyncState);
        
        byte[] EndGetDataTableWithPages(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IwcService/GetReference", ReplyAction="http://tempuri.org/IwcService/GetReferenceResponse")]
        byte[] GetReference(string p_Table, string p_Where, string p_Ln);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcService/GetReference", ReplyAction="http://tempuri.org/IwcService/GetReferenceResponse")]
        System.IAsyncResult BeginGetReference(string p_Table, string p_Where, string p_Ln, System.AsyncCallback callback, object asyncState);
        
        byte[] EndGetReference(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IwcService/GetDataSetProcedure", ReplyAction="http://tempuri.org/IwcService/GetDataSetProcedureResponse")]
        byte[] GetDataSetProcedure(string[] p_inParams, string p_ProcName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcService/GetDataSetProcedure", ReplyAction="http://tempuri.org/IwcService/GetDataSetProcedureResponse")]
        System.IAsyncResult BeginGetDataSetProcedure(string[] p_inParams, string p_ProcName, System.AsyncCallback callback, object asyncState);
        
        byte[] EndGetDataSetProcedure(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IwcService/GetProtoBufData", ReplyAction="http://tempuri.org/IwcService/GetProtoBufDataResponse")]
        byte[] GetProtoBufData(string[] p_inParams, string p_ProcName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcService/GetProtoBufData", ReplyAction="http://tempuri.org/IwcService/GetProtoBufDataResponse")]
        System.IAsyncResult BeginGetProtoBufData(string[] p_inParams, string p_ProcName, System.AsyncCallback callback, object asyncState);
        
        byte[] EndGetProtoBufData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IwcService/GetServerTime", ReplyAction="http://tempuri.org/IwcService/GetServerTimeResponse")]
        string GetServerTime(string ClientTime);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcService/GetServerTime", ReplyAction="http://tempuri.org/IwcService/GetServerTimeResponse")]
        System.IAsyncResult BeginGetServerTime(string ClientTime, System.AsyncCallback callback, object asyncState);
        
        string EndGetServerTime(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IwcService/GetPhoto", ReplyAction="http://tempuri.org/IwcService/GetPhotoResponse")]
        byte[] GetPhoto(string CitizenId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcService/GetPhoto", ReplyAction="http://tempuri.org/IwcService/GetPhotoResponse")]
        System.IAsyncResult BeginGetPhoto(string CitizenId, System.AsyncCallback callback, object asyncState);
        
        byte[] EndGetPhoto(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IwcService/MailService", ReplyAction="http://tempuri.org/IwcService/MailServiceResponse")]
        string MailService(string Ip, string Content);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcService/MailService", ReplyAction="http://tempuri.org/IwcService/MailServiceResponse")]
        System.IAsyncResult BeginMailService(string Ip, string Content, System.AsyncCallback callback, object asyncState);
        
        string EndMailService(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IwcService/GetDataTableSigned", ReplyAction="http://tempuri.org/IwcService/GetDataTableSignedResponse")]
        byte[] GetDataTableSigned(string Ip, string Content);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcService/GetDataTableSigned", ReplyAction="http://tempuri.org/IwcService/GetDataTableSignedResponse")]
        System.IAsyncResult BeginGetDataTableSigned(string Ip, string Content, System.AsyncCallback callback, object asyncState);
        
        byte[] EndGetDataTableSigned(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IwcService/GetDicoUpdate", ReplyAction="http://tempuri.org/IwcService/GetDicoUpdateResponse")]
        byte[] GetDicoUpdate(string inScn, string inIp, string inDivType, string inDivision);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcService/GetDicoUpdate", ReplyAction="http://tempuri.org/IwcService/GetDicoUpdateResponse")]
        System.IAsyncResult BeginGetDicoUpdate(string inScn, string inIp, string inDivType, string inDivision, System.AsyncCallback callback, object asyncState);
        
        byte[] EndGetDicoUpdate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IwcService/DoRPCWork", ReplyAction="http://tempuri.org/IwcService/DoRPCWorkResponse")]
        byte[] DoRPCWork(string rpn, byte[] param);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcService/DoRPCWork", ReplyAction="http://tempuri.org/IwcService/DoRPCWorkResponse")]
        System.IAsyncResult BeginDoRPCWork(string rpn, byte[] param, System.AsyncCallback callback, object asyncState);
        
        byte[] EndDoRPCWork(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IwcService/GetUpdates", ReplyAction="http://tempuri.org/IwcService/GetUpdatesResponse")]
        Kadr.PVOnlineWorks.srUni.OutResponce[] GetUpdates(string p_inVersion, string p_inDivision, string p_inCompName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcService/GetUpdates", ReplyAction="http://tempuri.org/IwcService/GetUpdatesResponse")]
        System.IAsyncResult BeginGetUpdates(string p_inVersion, string p_inDivision, string p_inCompName, System.AsyncCallback callback, object asyncState);
        
        Kadr.PVOnlineWorks.srUni.OutResponce[] EndGetUpdates(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IwcServiceChannel : Kadr.PVOnlineWorks.srUni.IwcService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataTableProcedureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataTableProcedureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataTableWithPagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataTableWithPagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetReferenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetReferenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataSetProcedureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataSetProcedureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProtoBufDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProtoBufDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetServerTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetServerTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPhotoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPhotoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MailServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MailServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataTableSignedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataTableSignedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDicoUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDicoUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DoRPCWorkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DoRPCWorkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUpdatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUpdatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Kadr.PVOnlineWorks.srUni.OutResponce[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Kadr.PVOnlineWorks.srUni.OutResponce[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IwcServiceClient : System.ServiceModel.ClientBase<Kadr.PVOnlineWorks.srUni.IwcService>, Kadr.PVOnlineWorks.srUni.IwcService {
        
        private BeginOperationDelegate onBeginCheckLoginDelegate;
        
        private EndOperationDelegate onEndCheckLoginDelegate;
        
        private System.Threading.SendOrPostCallback onCheckLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDataTableProcedureDelegate;
        
        private EndOperationDelegate onEndGetDataTableProcedureDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataTableProcedureCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDataTableWithPagesDelegate;
        
        private EndOperationDelegate onEndGetDataTableWithPagesDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataTableWithPagesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetReferenceDelegate;
        
        private EndOperationDelegate onEndGetReferenceDelegate;
        
        private System.Threading.SendOrPostCallback onGetReferenceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDataSetProcedureDelegate;
        
        private EndOperationDelegate onEndGetDataSetProcedureDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataSetProcedureCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProtoBufDataDelegate;
        
        private EndOperationDelegate onEndGetProtoBufDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetProtoBufDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetServerTimeDelegate;
        
        private EndOperationDelegate onEndGetServerTimeDelegate;
        
        private System.Threading.SendOrPostCallback onGetServerTimeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPhotoDelegate;
        
        private EndOperationDelegate onEndGetPhotoDelegate;
        
        private System.Threading.SendOrPostCallback onGetPhotoCompletedDelegate;
        
        private BeginOperationDelegate onBeginMailServiceDelegate;
        
        private EndOperationDelegate onEndMailServiceDelegate;
        
        private System.Threading.SendOrPostCallback onMailServiceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDataTableSignedDelegate;
        
        private EndOperationDelegate onEndGetDataTableSignedDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataTableSignedCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDicoUpdateDelegate;
        
        private EndOperationDelegate onEndGetDicoUpdateDelegate;
        
        private System.Threading.SendOrPostCallback onGetDicoUpdateCompletedDelegate;
        
        private BeginOperationDelegate onBeginDoRPCWorkDelegate;
        
        private EndOperationDelegate onEndDoRPCWorkDelegate;
        
        private System.Threading.SendOrPostCallback onDoRPCWorkCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUpdatesDelegate;
        
        private EndOperationDelegate onEndGetUpdatesDelegate;
        
        private System.Threading.SendOrPostCallback onGetUpdatesCompletedDelegate;
        
        public IwcServiceClient() {
        }
        
        public IwcServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IwcServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IwcServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IwcServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<CheckLoginCompletedEventArgs> CheckLoginCompleted;
        
        public event System.EventHandler<GetDataTableProcedureCompletedEventArgs> GetDataTableProcedureCompleted;
        
        public event System.EventHandler<GetDataTableWithPagesCompletedEventArgs> GetDataTableWithPagesCompleted;
        
        public event System.EventHandler<GetReferenceCompletedEventArgs> GetReferenceCompleted;
        
        public event System.EventHandler<GetDataSetProcedureCompletedEventArgs> GetDataSetProcedureCompleted;
        
        public event System.EventHandler<GetProtoBufDataCompletedEventArgs> GetProtoBufDataCompleted;
        
        public event System.EventHandler<GetServerTimeCompletedEventArgs> GetServerTimeCompleted;
        
        public event System.EventHandler<GetPhotoCompletedEventArgs> GetPhotoCompleted;
        
        public event System.EventHandler<MailServiceCompletedEventArgs> MailServiceCompleted;
        
        public event System.EventHandler<GetDataTableSignedCompletedEventArgs> GetDataTableSignedCompleted;
        
        public event System.EventHandler<GetDicoUpdateCompletedEventArgs> GetDicoUpdateCompleted;
        
        public event System.EventHandler<DoRPCWorkCompletedEventArgs> DoRPCWorkCompleted;
        
        public event System.EventHandler<GetUpdatesCompletedEventArgs> GetUpdatesCompleted;
        
        public byte[] CheckLogin(string p_Value, string p_SignedValue, byte[] p_Cert, string p_Divtype) {
            return base.Channel.CheckLogin(p_Value, p_SignedValue, p_Cert, p_Divtype);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCheckLogin(string p_Value, string p_SignedValue, byte[] p_Cert, string p_Divtype, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckLogin(p_Value, p_SignedValue, p_Cert, p_Divtype, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndCheckLogin(System.IAsyncResult result) {
            return base.Channel.EndCheckLogin(result);
        }
        
        private System.IAsyncResult OnBeginCheckLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string p_Value = ((string)(inValues[0]));
            string p_SignedValue = ((string)(inValues[1]));
            byte[] p_Cert = ((byte[])(inValues[2]));
            string p_Divtype = ((string)(inValues[3]));
            return this.BeginCheckLogin(p_Value, p_SignedValue, p_Cert, p_Divtype, callback, asyncState);
        }
        
        private object[] OnEndCheckLogin(System.IAsyncResult result) {
            byte[] retVal = this.EndCheckLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckLoginCompleted(object state) {
            if ((this.CheckLoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckLoginCompleted(this, new CheckLoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckLoginAsync(string p_Value, string p_SignedValue, byte[] p_Cert, string p_Divtype) {
            this.CheckLoginAsync(p_Value, p_SignedValue, p_Cert, p_Divtype, null);
        }
        
        public void CheckLoginAsync(string p_Value, string p_SignedValue, byte[] p_Cert, string p_Divtype, object userState) {
            if ((this.onBeginCheckLoginDelegate == null)) {
                this.onBeginCheckLoginDelegate = new BeginOperationDelegate(this.OnBeginCheckLogin);
            }
            if ((this.onEndCheckLoginDelegate == null)) {
                this.onEndCheckLoginDelegate = new EndOperationDelegate(this.OnEndCheckLogin);
            }
            if ((this.onCheckLoginCompletedDelegate == null)) {
                this.onCheckLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckLoginCompleted);
            }
            base.InvokeAsync(this.onBeginCheckLoginDelegate, new object[] {
                        p_Value,
                        p_SignedValue,
                        p_Cert,
                        p_Divtype}, this.onEndCheckLoginDelegate, this.onCheckLoginCompletedDelegate, userState);
        }
        
        public byte[] GetDataTableProcedure(string[] p_inParams, string p_ProcName) {
            return base.Channel.GetDataTableProcedure(p_inParams, p_ProcName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDataTableProcedure(string[] p_inParams, string p_ProcName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDataTableProcedure(p_inParams, p_ProcName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndGetDataTableProcedure(System.IAsyncResult result) {
            return base.Channel.EndGetDataTableProcedure(result);
        }
        
        private System.IAsyncResult OnBeginGetDataTableProcedure(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string[] p_inParams = ((string[])(inValues[0]));
            string p_ProcName = ((string)(inValues[1]));
            return this.BeginGetDataTableProcedure(p_inParams, p_ProcName, callback, asyncState);
        }
        
        private object[] OnEndGetDataTableProcedure(System.IAsyncResult result) {
            byte[] retVal = this.EndGetDataTableProcedure(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataTableProcedureCompleted(object state) {
            if ((this.GetDataTableProcedureCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataTableProcedureCompleted(this, new GetDataTableProcedureCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataTableProcedureAsync(string[] p_inParams, string p_ProcName) {
            this.GetDataTableProcedureAsync(p_inParams, p_ProcName, null);
        }
        
        public void GetDataTableProcedureAsync(string[] p_inParams, string p_ProcName, object userState) {
            if ((this.onBeginGetDataTableProcedureDelegate == null)) {
                this.onBeginGetDataTableProcedureDelegate = new BeginOperationDelegate(this.OnBeginGetDataTableProcedure);
            }
            if ((this.onEndGetDataTableProcedureDelegate == null)) {
                this.onEndGetDataTableProcedureDelegate = new EndOperationDelegate(this.OnEndGetDataTableProcedure);
            }
            if ((this.onGetDataTableProcedureCompletedDelegate == null)) {
                this.onGetDataTableProcedureCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataTableProcedureCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataTableProcedureDelegate, new object[] {
                        p_inParams,
                        p_ProcName}, this.onEndGetDataTableProcedureDelegate, this.onGetDataTableProcedureCompletedDelegate, userState);
        }
        
        public byte[] GetDataTableWithPages(string[] p_inParams, string p_ProcName, int FromRec, int ToRec) {
            return base.Channel.GetDataTableWithPages(p_inParams, p_ProcName, FromRec, ToRec);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDataTableWithPages(string[] p_inParams, string p_ProcName, int FromRec, int ToRec, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDataTableWithPages(p_inParams, p_ProcName, FromRec, ToRec, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndGetDataTableWithPages(System.IAsyncResult result) {
            return base.Channel.EndGetDataTableWithPages(result);
        }
        
        private System.IAsyncResult OnBeginGetDataTableWithPages(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string[] p_inParams = ((string[])(inValues[0]));
            string p_ProcName = ((string)(inValues[1]));
            int FromRec = ((int)(inValues[2]));
            int ToRec = ((int)(inValues[3]));
            return this.BeginGetDataTableWithPages(p_inParams, p_ProcName, FromRec, ToRec, callback, asyncState);
        }
        
        private object[] OnEndGetDataTableWithPages(System.IAsyncResult result) {
            byte[] retVal = this.EndGetDataTableWithPages(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataTableWithPagesCompleted(object state) {
            if ((this.GetDataTableWithPagesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataTableWithPagesCompleted(this, new GetDataTableWithPagesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataTableWithPagesAsync(string[] p_inParams, string p_ProcName, int FromRec, int ToRec) {
            this.GetDataTableWithPagesAsync(p_inParams, p_ProcName, FromRec, ToRec, null);
        }
        
        public void GetDataTableWithPagesAsync(string[] p_inParams, string p_ProcName, int FromRec, int ToRec, object userState) {
            if ((this.onBeginGetDataTableWithPagesDelegate == null)) {
                this.onBeginGetDataTableWithPagesDelegate = new BeginOperationDelegate(this.OnBeginGetDataTableWithPages);
            }
            if ((this.onEndGetDataTableWithPagesDelegate == null)) {
                this.onEndGetDataTableWithPagesDelegate = new EndOperationDelegate(this.OnEndGetDataTableWithPages);
            }
            if ((this.onGetDataTableWithPagesCompletedDelegate == null)) {
                this.onGetDataTableWithPagesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataTableWithPagesCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataTableWithPagesDelegate, new object[] {
                        p_inParams,
                        p_ProcName,
                        FromRec,
                        ToRec}, this.onEndGetDataTableWithPagesDelegate, this.onGetDataTableWithPagesCompletedDelegate, userState);
        }
        
        public byte[] GetReference(string p_Table, string p_Where, string p_Ln) {
            return base.Channel.GetReference(p_Table, p_Where, p_Ln);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetReference(string p_Table, string p_Where, string p_Ln, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetReference(p_Table, p_Where, p_Ln, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndGetReference(System.IAsyncResult result) {
            return base.Channel.EndGetReference(result);
        }
        
        private System.IAsyncResult OnBeginGetReference(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string p_Table = ((string)(inValues[0]));
            string p_Where = ((string)(inValues[1]));
            string p_Ln = ((string)(inValues[2]));
            return this.BeginGetReference(p_Table, p_Where, p_Ln, callback, asyncState);
        }
        
        private object[] OnEndGetReference(System.IAsyncResult result) {
            byte[] retVal = this.EndGetReference(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetReferenceCompleted(object state) {
            if ((this.GetReferenceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetReferenceCompleted(this, new GetReferenceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetReferenceAsync(string p_Table, string p_Where, string p_Ln) {
            this.GetReferenceAsync(p_Table, p_Where, p_Ln, null);
        }
        
        public void GetReferenceAsync(string p_Table, string p_Where, string p_Ln, object userState) {
            if ((this.onBeginGetReferenceDelegate == null)) {
                this.onBeginGetReferenceDelegate = new BeginOperationDelegate(this.OnBeginGetReference);
            }
            if ((this.onEndGetReferenceDelegate == null)) {
                this.onEndGetReferenceDelegate = new EndOperationDelegate(this.OnEndGetReference);
            }
            if ((this.onGetReferenceCompletedDelegate == null)) {
                this.onGetReferenceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetReferenceCompleted);
            }
            base.InvokeAsync(this.onBeginGetReferenceDelegate, new object[] {
                        p_Table,
                        p_Where,
                        p_Ln}, this.onEndGetReferenceDelegate, this.onGetReferenceCompletedDelegate, userState);
        }
        
        public byte[] GetDataSetProcedure(string[] p_inParams, string p_ProcName) {
            return base.Channel.GetDataSetProcedure(p_inParams, p_ProcName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDataSetProcedure(string[] p_inParams, string p_ProcName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDataSetProcedure(p_inParams, p_ProcName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndGetDataSetProcedure(System.IAsyncResult result) {
            return base.Channel.EndGetDataSetProcedure(result);
        }
        
        private System.IAsyncResult OnBeginGetDataSetProcedure(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string[] p_inParams = ((string[])(inValues[0]));
            string p_ProcName = ((string)(inValues[1]));
            return this.BeginGetDataSetProcedure(p_inParams, p_ProcName, callback, asyncState);
        }
        
        private object[] OnEndGetDataSetProcedure(System.IAsyncResult result) {
            byte[] retVal = this.EndGetDataSetProcedure(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataSetProcedureCompleted(object state) {
            if ((this.GetDataSetProcedureCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataSetProcedureCompleted(this, new GetDataSetProcedureCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataSetProcedureAsync(string[] p_inParams, string p_ProcName) {
            this.GetDataSetProcedureAsync(p_inParams, p_ProcName, null);
        }
        
        public void GetDataSetProcedureAsync(string[] p_inParams, string p_ProcName, object userState) {
            if ((this.onBeginGetDataSetProcedureDelegate == null)) {
                this.onBeginGetDataSetProcedureDelegate = new BeginOperationDelegate(this.OnBeginGetDataSetProcedure);
            }
            if ((this.onEndGetDataSetProcedureDelegate == null)) {
                this.onEndGetDataSetProcedureDelegate = new EndOperationDelegate(this.OnEndGetDataSetProcedure);
            }
            if ((this.onGetDataSetProcedureCompletedDelegate == null)) {
                this.onGetDataSetProcedureCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataSetProcedureCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataSetProcedureDelegate, new object[] {
                        p_inParams,
                        p_ProcName}, this.onEndGetDataSetProcedureDelegate, this.onGetDataSetProcedureCompletedDelegate, userState);
        }
        
        public byte[] GetProtoBufData(string[] p_inParams, string p_ProcName) {
            return base.Channel.GetProtoBufData(p_inParams, p_ProcName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetProtoBufData(string[] p_inParams, string p_ProcName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProtoBufData(p_inParams, p_ProcName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndGetProtoBufData(System.IAsyncResult result) {
            return base.Channel.EndGetProtoBufData(result);
        }
        
        private System.IAsyncResult OnBeginGetProtoBufData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string[] p_inParams = ((string[])(inValues[0]));
            string p_ProcName = ((string)(inValues[1]));
            return this.BeginGetProtoBufData(p_inParams, p_ProcName, callback, asyncState);
        }
        
        private object[] OnEndGetProtoBufData(System.IAsyncResult result) {
            byte[] retVal = this.EndGetProtoBufData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProtoBufDataCompleted(object state) {
            if ((this.GetProtoBufDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProtoBufDataCompleted(this, new GetProtoBufDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProtoBufDataAsync(string[] p_inParams, string p_ProcName) {
            this.GetProtoBufDataAsync(p_inParams, p_ProcName, null);
        }
        
        public void GetProtoBufDataAsync(string[] p_inParams, string p_ProcName, object userState) {
            if ((this.onBeginGetProtoBufDataDelegate == null)) {
                this.onBeginGetProtoBufDataDelegate = new BeginOperationDelegate(this.OnBeginGetProtoBufData);
            }
            if ((this.onEndGetProtoBufDataDelegate == null)) {
                this.onEndGetProtoBufDataDelegate = new EndOperationDelegate(this.OnEndGetProtoBufData);
            }
            if ((this.onGetProtoBufDataCompletedDelegate == null)) {
                this.onGetProtoBufDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProtoBufDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetProtoBufDataDelegate, new object[] {
                        p_inParams,
                        p_ProcName}, this.onEndGetProtoBufDataDelegate, this.onGetProtoBufDataCompletedDelegate, userState);
        }
        
        public string GetServerTime(string ClientTime) {
            return base.Channel.GetServerTime(ClientTime);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetServerTime(string ClientTime, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetServerTime(ClientTime, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetServerTime(System.IAsyncResult result) {
            return base.Channel.EndGetServerTime(result);
        }
        
        private System.IAsyncResult OnBeginGetServerTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ClientTime = ((string)(inValues[0]));
            return this.BeginGetServerTime(ClientTime, callback, asyncState);
        }
        
        private object[] OnEndGetServerTime(System.IAsyncResult result) {
            string retVal = this.EndGetServerTime(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetServerTimeCompleted(object state) {
            if ((this.GetServerTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetServerTimeCompleted(this, new GetServerTimeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetServerTimeAsync(string ClientTime) {
            this.GetServerTimeAsync(ClientTime, null);
        }
        
        public void GetServerTimeAsync(string ClientTime, object userState) {
            if ((this.onBeginGetServerTimeDelegate == null)) {
                this.onBeginGetServerTimeDelegate = new BeginOperationDelegate(this.OnBeginGetServerTime);
            }
            if ((this.onEndGetServerTimeDelegate == null)) {
                this.onEndGetServerTimeDelegate = new EndOperationDelegate(this.OnEndGetServerTime);
            }
            if ((this.onGetServerTimeCompletedDelegate == null)) {
                this.onGetServerTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetServerTimeCompleted);
            }
            base.InvokeAsync(this.onBeginGetServerTimeDelegate, new object[] {
                        ClientTime}, this.onEndGetServerTimeDelegate, this.onGetServerTimeCompletedDelegate, userState);
        }
        
        public byte[] GetPhoto(string CitizenId) {
            return base.Channel.GetPhoto(CitizenId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPhoto(string CitizenId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPhoto(CitizenId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndGetPhoto(System.IAsyncResult result) {
            return base.Channel.EndGetPhoto(result);
        }
        
        private System.IAsyncResult OnBeginGetPhoto(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string CitizenId = ((string)(inValues[0]));
            return this.BeginGetPhoto(CitizenId, callback, asyncState);
        }
        
        private object[] OnEndGetPhoto(System.IAsyncResult result) {
            byte[] retVal = this.EndGetPhoto(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPhotoCompleted(object state) {
            if ((this.GetPhotoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPhotoCompleted(this, new GetPhotoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPhotoAsync(string CitizenId) {
            this.GetPhotoAsync(CitizenId, null);
        }
        
        public void GetPhotoAsync(string CitizenId, object userState) {
            if ((this.onBeginGetPhotoDelegate == null)) {
                this.onBeginGetPhotoDelegate = new BeginOperationDelegate(this.OnBeginGetPhoto);
            }
            if ((this.onEndGetPhotoDelegate == null)) {
                this.onEndGetPhotoDelegate = new EndOperationDelegate(this.OnEndGetPhoto);
            }
            if ((this.onGetPhotoCompletedDelegate == null)) {
                this.onGetPhotoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPhotoCompleted);
            }
            base.InvokeAsync(this.onBeginGetPhotoDelegate, new object[] {
                        CitizenId}, this.onEndGetPhotoDelegate, this.onGetPhotoCompletedDelegate, userState);
        }
        
        public string MailService(string Ip, string Content) {
            return base.Channel.MailService(Ip, Content);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMailService(string Ip, string Content, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMailService(Ip, Content, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndMailService(System.IAsyncResult result) {
            return base.Channel.EndMailService(result);
        }
        
        private System.IAsyncResult OnBeginMailService(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Ip = ((string)(inValues[0]));
            string Content = ((string)(inValues[1]));
            return this.BeginMailService(Ip, Content, callback, asyncState);
        }
        
        private object[] OnEndMailService(System.IAsyncResult result) {
            string retVal = this.EndMailService(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMailServiceCompleted(object state) {
            if ((this.MailServiceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MailServiceCompleted(this, new MailServiceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MailServiceAsync(string Ip, string Content) {
            this.MailServiceAsync(Ip, Content, null);
        }
        
        public void MailServiceAsync(string Ip, string Content, object userState) {
            if ((this.onBeginMailServiceDelegate == null)) {
                this.onBeginMailServiceDelegate = new BeginOperationDelegate(this.OnBeginMailService);
            }
            if ((this.onEndMailServiceDelegate == null)) {
                this.onEndMailServiceDelegate = new EndOperationDelegate(this.OnEndMailService);
            }
            if ((this.onMailServiceCompletedDelegate == null)) {
                this.onMailServiceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMailServiceCompleted);
            }
            base.InvokeAsync(this.onBeginMailServiceDelegate, new object[] {
                        Ip,
                        Content}, this.onEndMailServiceDelegate, this.onMailServiceCompletedDelegate, userState);
        }
        
        public byte[] GetDataTableSigned(string Ip, string Content) {
            return base.Channel.GetDataTableSigned(Ip, Content);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDataTableSigned(string Ip, string Content, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDataTableSigned(Ip, Content, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndGetDataTableSigned(System.IAsyncResult result) {
            return base.Channel.EndGetDataTableSigned(result);
        }
        
        private System.IAsyncResult OnBeginGetDataTableSigned(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Ip = ((string)(inValues[0]));
            string Content = ((string)(inValues[1]));
            return this.BeginGetDataTableSigned(Ip, Content, callback, asyncState);
        }
        
        private object[] OnEndGetDataTableSigned(System.IAsyncResult result) {
            byte[] retVal = this.EndGetDataTableSigned(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataTableSignedCompleted(object state) {
            if ((this.GetDataTableSignedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataTableSignedCompleted(this, new GetDataTableSignedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataTableSignedAsync(string Ip, string Content) {
            this.GetDataTableSignedAsync(Ip, Content, null);
        }
        
        public void GetDataTableSignedAsync(string Ip, string Content, object userState) {
            if ((this.onBeginGetDataTableSignedDelegate == null)) {
                this.onBeginGetDataTableSignedDelegate = new BeginOperationDelegate(this.OnBeginGetDataTableSigned);
            }
            if ((this.onEndGetDataTableSignedDelegate == null)) {
                this.onEndGetDataTableSignedDelegate = new EndOperationDelegate(this.OnEndGetDataTableSigned);
            }
            if ((this.onGetDataTableSignedCompletedDelegate == null)) {
                this.onGetDataTableSignedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataTableSignedCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataTableSignedDelegate, new object[] {
                        Ip,
                        Content}, this.onEndGetDataTableSignedDelegate, this.onGetDataTableSignedCompletedDelegate, userState);
        }
        
        public byte[] GetDicoUpdate(string inScn, string inIp, string inDivType, string inDivision) {
            return base.Channel.GetDicoUpdate(inScn, inIp, inDivType, inDivision);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDicoUpdate(string inScn, string inIp, string inDivType, string inDivision, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDicoUpdate(inScn, inIp, inDivType, inDivision, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndGetDicoUpdate(System.IAsyncResult result) {
            return base.Channel.EndGetDicoUpdate(result);
        }
        
        private System.IAsyncResult OnBeginGetDicoUpdate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string inScn = ((string)(inValues[0]));
            string inIp = ((string)(inValues[1]));
            string inDivType = ((string)(inValues[2]));
            string inDivision = ((string)(inValues[3]));
            return this.BeginGetDicoUpdate(inScn, inIp, inDivType, inDivision, callback, asyncState);
        }
        
        private object[] OnEndGetDicoUpdate(System.IAsyncResult result) {
            byte[] retVal = this.EndGetDicoUpdate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDicoUpdateCompleted(object state) {
            if ((this.GetDicoUpdateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDicoUpdateCompleted(this, new GetDicoUpdateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDicoUpdateAsync(string inScn, string inIp, string inDivType, string inDivision) {
            this.GetDicoUpdateAsync(inScn, inIp, inDivType, inDivision, null);
        }
        
        public void GetDicoUpdateAsync(string inScn, string inIp, string inDivType, string inDivision, object userState) {
            if ((this.onBeginGetDicoUpdateDelegate == null)) {
                this.onBeginGetDicoUpdateDelegate = new BeginOperationDelegate(this.OnBeginGetDicoUpdate);
            }
            if ((this.onEndGetDicoUpdateDelegate == null)) {
                this.onEndGetDicoUpdateDelegate = new EndOperationDelegate(this.OnEndGetDicoUpdate);
            }
            if ((this.onGetDicoUpdateCompletedDelegate == null)) {
                this.onGetDicoUpdateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDicoUpdateCompleted);
            }
            base.InvokeAsync(this.onBeginGetDicoUpdateDelegate, new object[] {
                        inScn,
                        inIp,
                        inDivType,
                        inDivision}, this.onEndGetDicoUpdateDelegate, this.onGetDicoUpdateCompletedDelegate, userState);
        }
        
        public byte[] DoRPCWork(string rpn, byte[] param) {
            return base.Channel.DoRPCWork(rpn, param);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDoRPCWork(string rpn, byte[] param, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoRPCWork(rpn, param, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndDoRPCWork(System.IAsyncResult result) {
            return base.Channel.EndDoRPCWork(result);
        }
        
        private System.IAsyncResult OnBeginDoRPCWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string rpn = ((string)(inValues[0]));
            byte[] param = ((byte[])(inValues[1]));
            return this.BeginDoRPCWork(rpn, param, callback, asyncState);
        }
        
        private object[] OnEndDoRPCWork(System.IAsyncResult result) {
            byte[] retVal = this.EndDoRPCWork(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDoRPCWorkCompleted(object state) {
            if ((this.DoRPCWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoRPCWorkCompleted(this, new DoRPCWorkCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoRPCWorkAsync(string rpn, byte[] param) {
            this.DoRPCWorkAsync(rpn, param, null);
        }
        
        public void DoRPCWorkAsync(string rpn, byte[] param, object userState) {
            if ((this.onBeginDoRPCWorkDelegate == null)) {
                this.onBeginDoRPCWorkDelegate = new BeginOperationDelegate(this.OnBeginDoRPCWork);
            }
            if ((this.onEndDoRPCWorkDelegate == null)) {
                this.onEndDoRPCWorkDelegate = new EndOperationDelegate(this.OnEndDoRPCWork);
            }
            if ((this.onDoRPCWorkCompletedDelegate == null)) {
                this.onDoRPCWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoRPCWorkCompleted);
            }
            base.InvokeAsync(this.onBeginDoRPCWorkDelegate, new object[] {
                        rpn,
                        param}, this.onEndDoRPCWorkDelegate, this.onDoRPCWorkCompletedDelegate, userState);
        }
        
        public Kadr.PVOnlineWorks.srUni.OutResponce[] GetUpdates(string p_inVersion, string p_inDivision, string p_inCompName) {
            return base.Channel.GetUpdates(p_inVersion, p_inDivision, p_inCompName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetUpdates(string p_inVersion, string p_inDivision, string p_inCompName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUpdates(p_inVersion, p_inDivision, p_inCompName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Kadr.PVOnlineWorks.srUni.OutResponce[] EndGetUpdates(System.IAsyncResult result) {
            return base.Channel.EndGetUpdates(result);
        }
        
        private System.IAsyncResult OnBeginGetUpdates(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string p_inVersion = ((string)(inValues[0]));
            string p_inDivision = ((string)(inValues[1]));
            string p_inCompName = ((string)(inValues[2]));
            return this.BeginGetUpdates(p_inVersion, p_inDivision, p_inCompName, callback, asyncState);
        }
        
        private object[] OnEndGetUpdates(System.IAsyncResult result) {
            Kadr.PVOnlineWorks.srUni.OutResponce[] retVal = this.EndGetUpdates(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUpdatesCompleted(object state) {
            if ((this.GetUpdatesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUpdatesCompleted(this, new GetUpdatesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUpdatesAsync(string p_inVersion, string p_inDivision, string p_inCompName) {
            this.GetUpdatesAsync(p_inVersion, p_inDivision, p_inCompName, null);
        }
        
        public void GetUpdatesAsync(string p_inVersion, string p_inDivision, string p_inCompName, object userState) {
            if ((this.onBeginGetUpdatesDelegate == null)) {
                this.onBeginGetUpdatesDelegate = new BeginOperationDelegate(this.OnBeginGetUpdates);
            }
            if ((this.onEndGetUpdatesDelegate == null)) {
                this.onEndGetUpdatesDelegate = new EndOperationDelegate(this.OnEndGetUpdates);
            }
            if ((this.onGetUpdatesCompletedDelegate == null)) {
                this.onGetUpdatesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUpdatesCompleted);
            }
            base.InvokeAsync(this.onBeginGetUpdatesDelegate, new object[] {
                        p_inVersion,
                        p_inDivision,
                        p_inCompName}, this.onEndGetUpdatesDelegate, this.onGetUpdatesCompletedDelegate, userState);
        }
    }
}
